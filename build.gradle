import de.undercouch.gradle.tasks.download.Download
apply plugin: 'download-task'
apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'cargo'
apply plugin: 'maven'
apply from: 'http://tellurianring.com/projects/gradle-plugins/gradle-release/apply.groovy'

def isRelease = false

sourceCompatibility = 1.6
group = "com.bobpaulin.gradle"
def artifactDownloadPath = "target/gradle-web.war"
def userName = System.getProperty("user.name")
def gradlePropsFile = project.file(userName + ".properties")
def userProperties = new Properties()
def gradleFileReader = new FileReader(gradlePropsFile)
userProperties.load(gradleFileReader)
gradleFileReader.close()

project.setProperty("buildInfo.build.number", userProperties.getProperty("buildInfo.build.number"))
project.setProperty("repository_user", userProperties.getProperty("repository_user"))
project.setProperty("repository_password", userProperties.getProperty("repository_password"))

buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath 'org.gradle.api.plugins:gradle-cargo-plugin:0.6.1'
		classpath 'de.undercouch:gradle-download-task:0.2'
	}
}

cargo {
	containerId = 'tomcat7x'
	port = 8080

	deployable {
		context = 'gradle-web'
		file = project.file(artifactDownloadPath)
	}
	
	remote {
		hostname = 'localhost'
		username = 'admin'
		password = 'admin'
	}
	
}

repositories {
	mavenRepo urls: "$repository_contextUrl/libs-releases";
	mavenCentral()
}

configurations{
	gradleweb { transitive = false }
}

dependencies {
	def cargoVersion = '1.3.3'
	cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
		  "org.codehaus.cargo:cargo-ant:$cargoVersion"
	gradleweb "com.bobpaulin.gradle:gradle-web:$version"
}

task downloadWar << {
	def groupPath = project.group.replace(".", "/")
	def versionPath = project.version
	if(!isRelease)
	{
		versionPath += '.admin.6'
	}
	
	def artifactNamePath = 'gradle-web' + versionPath + '.war'
	def downloadUrl = project.getProperty("repository_contextUrl") + "/libs-release-local/" + groupPath + "/gradle-web/" + versionPath + "/" + artifactNamePath
	
	ant.get(src: downloadUrl, dest: artifactDownloadPath)
	
}

task updateBuildNumber << {
	
	def buildNum = userProperties.getProperty("buildInfo.build.number")
	buildNum++
	userProperties.setProperty("buildInfo.build.number", buildNum)
	def gradleFileWriter = new FileWriter(gradlePropsFile)
	userProperties.store(gradleFileWriter, "")
	gradleFileWriter.flush()
	gradleFileWriter.close()
}

task updateUploadedPom << {
	def pomVersion = project.version
	if(!isRelease)
		pomVersion += userName + "." + project.getProperty('buildInfo.build.number')
	uploadArchives.repositories.mavenDeployer.pom.version = pomVersion
}


confirmReleaseVersion.dependsOn updateBuildNumber
createReleaseTag.dependsOn uploadArchives
uploadArchives.dependsOn updateUploadedPom

uploadArchives {
	repositories {
		mavenDeployer {
			pom.artifactId = 'gradle-web'
			repository(url: "$repository_contextUrl/libs-release-local" ){
				authentication(userName: project.getProperty("repository_user"), password: project.getProperty("repository_password"))
			}
			
		}
	}
}