apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'cargo'
apply plugin: 'maven'
apply from: 'http://tellurianring.com/projects/gradle-plugins/gradle-release/apply.groovy'


//Initialization

sourceCompatibility = 1.6
group = "com.bobpaulin.gradle"
def artifactDownloadPath = "target/gradle-web.war"
def userName = System.getProperty("user.name")
def gradlePropsFile = project.file(userName + ".properties")
def userProperties = new Properties()
def gradleFileReader = new FileReader(gradlePropsFile)
userProperties.load(gradleFileReader)
gradleFileReader.close()

//Load user properties
for(currentUserProperty in userProperties.stringPropertyNames())
{
	project.ext.set(currentUserProperty, userProperties.getProperty(currentUserProperty))
}


//Configurations
buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath 'org.gradle.api.plugins:gradle-cargo-plugin:0.6.1'
	}
}

cargo {
	containerId = 'tomcat7x'
	port = 8080

	deployable {
		context = 'gradle-web'
		file = project.file(artifactDownloadPath)
	}
	
	remote {
		hostname = "$deployHostname"
		username = "$deployUserName"
		password = "$deployPassword"
	}
	
}

repositories {
	mavenRepo url: "$repositoryContextUrl/libs-releases";
	mavenCentral()
}

dependencies {
	def cargoVersion = '1.3.3'
	cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
		  "org.codehaus.cargo:cargo-ant:$cargoVersion"
}

uploadArchives {
	repositories {
		mavenDeployer {
			pom.artifactId = 'gradle-web'
			repository(url: "$repositoryContextUrl/libs-release-local" ){
				authentication(userName: "$repositoryUser", password: "$repositoryPassword")
			}
			
		}
	}
}

//Custom Tasks
task downloadWar << {
	
	def groupPath = project.group.replace(".", "/")
	def defaultVersion = project.version + "." + userName + ".$buildNumber"
	println "Enter Version: [" + defaultVersion +"]"
	def versionPath = System.in.newReader().readLine() ?: defaultVersion
	
	def artifactNamePath = 'gradle-web-' + versionPath + '.war'
	
	def downloadUrl = "$repositoryContextUrl/libs-release-local/" + groupPath + "/gradle-web/" + versionPath + "/" + artifactNamePath
	
	def targetDir = new File('target')
	
	if(!targetDir.isDirectory())
	{
		targetDir.mkdirs()
	}
	
	ant.get(src: downloadUrl, dest: artifactDownloadPath)
	
}

task updateBuildNumber << {
	
	def buildNum = project.ext.get("buildNumber")
	buildNum++
	userProperties.setProperty("buildNumber", buildNum)
	def gradleFileWriter = new FileWriter(gradlePropsFile)
	userProperties.store(gradleFileWriter, "")
	gradleFileWriter.flush()
	gradleFileWriter.close()
}

task updateUploadedPom << {
	def pomVersion = project.version
	println "Tasks: " + project.getGradle().getTaskGraph().getAllTasks()
	if(!project.getGradle().getTaskGraph().hasTask("release"))
		pomVersion += "." + userName + ".$buildNumber"
	uploadArchives.repositories.mavenDeployer.pom.version = pomVersion
}


//Task Dependencies
confirmReleaseVersion.dependsOn updateBuildNumber
createReleaseTag.dependsOn uploadArchives
uploadArchives.dependsOn updateUploadedPom